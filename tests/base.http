### Not found -----------------------------------------------
GET {{host}}/xxx

> scripts/assert404.js


### create private resource (as root) -----------------------------------------------
POST {{host}}/api/bucket/77/resource
Authorization: rootKey
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Type: application/json

{
  "users": [55,66],
  "groups": [666]
}

--WebAppBoundary
Content-Disposition: form-data; filename="ffff23.jpg"
Content-Type: image/jpeg

< ./files/ffff23.jpg
--WebAppBoundary--

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("priv_resource_id", response.body.id);
    client.global.set("priv_resource_url", response.body.path + '/' + response.body.filename);
}); %}


### create public resource (as root) -----------------------------------------------
POST {{host}}/api/bucket/77/resource
Authorization: rootKey
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Type: application/json

{
}

--WebAppBoundary
Content-Disposition: form-data; filename="ffff23.jpg"
Content-Type: image/jpeg

< ./files/ffff23.jpg
--WebAppBoundary--

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("pub_resource_id", response.body.id);
    client.global.set("pub_resource_url", response.body.path + '/' + response.body.filename);
}); %}


### Public access -----------------------------------------------
GET {{host}}/{{pub_resource_url}}
Accept: image/*

> scripts/assert200AndJpg.js



### Full access with rootKey -----------------------------------------------
GET {{host}}/{{priv_resource_url}}
Authorization: rootKey
Accept: image/*

> scripts/assert200AndJpg.js


### (Only) Root creates Bucket -----------------------------------------------
POST {{host}}/api/bucket
Authorization: rootKey
Accept: application/json
Content-Type: application/json

{
   "id": 77
}

> scripts/assert200Or409.js



### Root creates Customer Admin Token -----------------------------------------------
POST {{host}}/api/token
Authorization: rootKey
Accept: application/json
Content-Type: application/json

{
  "users": [],
  "groups": [],
  "buckets": [77],
  "root": false
}

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("admin_token1", response.body.id);
}); %}

### -----------------------------------------------
GET {{host}}/{{priv_resource_url}}
Authorization: {{admin_token1}}

> scripts/assert200AndJpg.js


### Customer Admin creates Admin Token -----------------------------------------------
POST {{host}}/api/bucket/77/token
Authorization: {{admin_token1}}
Content-Type: application/json
Accept: application/json

{
  "users": [],
  "groups": [],
  "buckets": [77, 88],
  "root": true
}

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("admin_token2", response.body.id);
}); %}

### -----------------------------------------------
GET {{host}}/{{priv_resource_url}}
Authorization: {{admin_token2}}
Accept: image/*

> scripts/assert200AndJpg.js


### Customer Admin creates User Token -----------------------------------------------
POST {{host}}/api/bucket/77/token
Authorization: {{admin_token2}}
Content-Type: application/json
Accept: application/json

{
  "users": [55]
}

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("user_token1", response.body.id);
}); %}

### -----------------------------------------------
GET {{host}}/{{priv_resource_url}}
Authorization: {{user_token1}}
Accept: image/*

> scripts/assert200AndJpg.js



### User cannot create tokens -----------------------------------------------
POST {{host}}/api/bucket/77/token
Authorization: {{user_token1}}
Content-Type: application/json
Accept: application/json

> scripts/assert403AndJson.js



### Show bucket -----------------------------------------------
GET {{host}}/api/bucket/77
Authorization: {{admin_token2}}

> scripts/assert200AndJson.js

### Show bucket -> 404 -----------------------------------------------
GET {{host}}/api/bucket/99999
Authorization: rootKey

> scripts/assert404.js

### Show bucket -> 404 -----------------------------------------------
GET {{host}}/api/bucket/0
Authorization: rootKey

> scripts/assert404.js

### Show resource in bucket -----------------------------------------------
GET {{host}}/api/bucket/77/resource/{{priv_resource_id}}
Authorization: {{admin_token2}}

> scripts/assert200AndJson.js

### Show token in bucket -----------------------------------------------
GET {{host}}/api/bucket/77/token/{{admin_token2}}
Authorization: {{admin_token2}}

> scripts/assert200AndJson.js

### Show token as root -----------------------------------------------
GET {{host}}/api/token/{{admin_token2}}
Authorization: rootKey

> scripts/assert200AndJson.js


### Customer Admin creates User Token -----------------------------------------------
POST {{host}}/api/bucket/77/token
Authorization: {{admin_token1}}
Content-Type: application/json
Accept: application/json

{
  "groups": [666]
}

> {%
client.test('test', function () {
    client.assert(response.status === 200);
    client.global.set("user_token2", response.body.id);
}); %}

### -----------------------------------------------
GET {{host}}/{{priv_resource_url}}
Authorization: {{user_token2}}
Accept: image/*

> scripts/assert200AndJpg.js
